#@ Keyword Search
NMAP
ZENMAP
NESSUS
NET\ USE
ENUM
SMBCLIENT
RPCCLIENT


#@##########################@#
#@                          @#
#@           NMAP           @#
#@                          @#
##############################

#^ Slow Comprehensive scan
nmap -sS -sU -T4 -A -v -PE -PP -PS80,443 -PA3389 -PU40125 -PY -g 53 --script all [ipAddr/cidr]

#^ Intense Scan
nmap -T4 -A -v [ipAddr/cidr]

#^ Intense scan + UDP
nmap -sS -sU -T4 -A -v

#^ Intense scan all TCP ports
nmap -p 1-65535 -T4 -A -v [ipAddr/cidr]

#^ Intense scan, no ping
nmap -T4 -A -v -Pn [ipAddr/cidr]

#^ Quick scan plus
nmap -sV -T4 -O -F --version-light <ipAddr/cidr>

#^ Do a ping scan (not port scan) scan for specific tcp ports 21,22,23,25,80,135,139,443,445,1025,3389 and UDP ports 53,67,68,69,111,161,445,514.  Use icmp echo with timestamp and netmask request discovery probes

nmap -sn -PS21,22,23,25,80,135,139,443,445,1025,3389 -PU53,67,68,69,111,161,445,514 -PE -PP -PM -oX out 10.0.0.0/24

#^ Launches host enumeration and a TCP scan at the first half of each of the 255 possible eight-bit subnets in the 198.116 class B address space. This tests whether the systems run SSH, DNS, POP3, or IMAP on their standard ports, or anything on port 4564. For any of these ports found open, version detection is used to determine what application is running.

 nmap -sV -p 22,53,110,143,4564 198.116.0-255.1-127 

#^ choose 100,000 hosts at random and scan them for web servers (port 80). Host enumeration is disabled with -Pn since first sending a couple probes to determine whether a host is up is wasteful when you are only probing one port on each target host anyway.

nmap -v -iR 100000 -Pn -p 80

#^ This scans 4096 IPs for any web servers (without pinging them) and saves the output in grepable and XML formats.

nmap -Pn -p80 -oX logs/pb-port80scan.xml -oG logs/pb-port80scan.gnmap 216.163.128.20/20

#^ GREP out hosts from initial nmap scan output in the 'out' file

grep up -A 1 out | grep -oE '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}' > hosts.txt

#^ Perform tcp syn scan on hosts.txt file on listed ports. Do limited probe for versions and output to portscan.txt

nmap -iL hosts.txt -PO -sS -p 22,25,110,143,3000,445,135,3128 -sV --version-light -O --osscan-limit -oN portscan.txt



#@##########################@#
#@                          @#
#@         ZENMAP           @#
#@                          @#
#@##########################@#

#^ start zenmap

zenmap


#@############################
#@                          @#
#@         NESSUS           @#
#@                          @#
#@##########################@#

#^ start nessus service 

service nessusd start

#^ connect to nessus GUI

Open Browser
Goto https://localhost:8834
username: root
password: !nessuspw!

#@##########################@#
#@                          @#
#@         NET USE          @#
#@                          @#
#@##########################@#

#^ Establish an SMB session

net use \\[TargetIPaddr]

#^ Connect as a different user or to a specific share

net use \\[TargetIPaddr]\[sharename] [password] /u:[username]

#^ Connect to a NULL SMB session

net use \\[TargetIPaddr] "" /u:""

#^ After established SMB session with target, list shares on target

net view \\[TargetIPaddr]


#@##########################@#
#@                          @#
#@          ENUM            @#
#@                          @#
#@##########################@#

#^ Pull list of shares from target

enum -S <TargetIPaddr> #via SMB NULL session
enum -u <username> -p <password> -G <TargetIPaddr> #via auth SMB session

#^ Pull list of user from target via SMB NULL session

enum -U <TargetIPaddr> #via SMB NULL session
enum -u <username> -p <password> -U <TargetIPaddr> #via auth SMB session

#^ Pull list of groups from target via SMB NULL session

enum -G <TargetIPaddr> #via SMB NULL session
enum -u <username> -p <password> -G <TargetIPaddr> #via auth SMB session

#^ Pull password policy information via SMB NULL session

enum -P <TargetIPaddr> #via SMB NULL session
enum -u <username> -p <password> -P <TargetIPaddr> #via auth SMB session

#^ Password guessing dictionary attack

enum -D -u <username> -f password.lst <TargetIPaddr>


#@##########################@#
#@                          @#
#@        SMBCLIENT         @#
#@                          @#
#@##########################@#

#^ List available shares on remote windows target

smbclient -L <WinIPaddr>  -U <username> -p 445

#^ create interactive smbclient connection on remote windows target and get file

smbclient //<WinIPaddr>/test -U <username> -p 445
ls
get <filename>

#@##########################@#
#@                          @#
#@        RPCCLIENT         @#
#@                          @#
#@##########################@#

#^ test access to remote smb server from linux

smbclient -L <remote-ip> -U <username>

#^ start rpcclient connection to remote smb server from linux

rpcclient -U <username> <remote-ip>

#^ within rpcclient, enumerate users on target

enumdomusers

#^ within rpcclient, enumerate domain related groups on target

enumalsgroups

#^ within rpcclient, enumerate builtin groups on target

enumalsgroups builtin

#^ within rpcclient, get server info of target

srvinfo

#^ within rpcclient, lookup SIDs for administrators group on target

lookupnames administrators

#^ within rpcclient, list accounts on administrators group on target

queryaliasmem builtin 544

#^ within rpcclient, get info on user that has SID listed from above command

lookupsids <SID>

#^ within rpcclient, get more account info via RID on target

queryuser <RID>


